<?php
# This file was automatically generated by the MediaWiki 1.30.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}



## Uncomment this to disable output compression

# $wgDisableOutputCompression = true;



$wgSitename = "Corbin's Mind";



## The URL base path to the directory containing the wiki;

## defaults for all runtime URL paths are based off of this.

## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL


## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/wiki";
$wgArticlePath = "/w/$1";
$wgUsePathInfo = true;


## The protocol and server name to use in fully-qualified URLs

$wgServer = "http://corbin.cf";



## The URL path to static resources (images, scripts, etc.)

$wgResourceBasePath = $wgScriptPath;



## The URL path to the logo.  Make sure you change this from the default,

## or else you'll overwrite your logo when you upgrade!

$wgLogo = "$wgResourceBasePath/images/CorbipediaLogo.png";



## UPO means: this is also a user preference option


$wgEnableEmail = false;

$wgEnableUserEmail = true;

# UPO


$wgEmergencyContact = "admin@corbin.cf";

$wgPasswordSender = "admin@corbin.cf";


$wgEnotifUserTalk = false;

# UPO
$wgEnotifWatchlist = false;
# UPO
$wgEmailAuthentication = true;



## Database settings

$wgDBtype = "mysql";

$wgDBserver = "db";

$wgDBname = "wiki";

$wgDBuser = "wiki";

$wgDBpassword = "YqKOnYOXGrHaUqFU";



# MySQL specific settings

$wgDBprefix = "wiki_";



# MySQL table options to use during installation or update

$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";



# Experimental charset support for MySQL 5.0.

$wgDBmysql5 = false;



## Shared memory settings

$wgMainCacheType = CACHE_NONE;

$wgMemCachedServers = [];



/**
 * The debug log file should not be publicly accessible if it is used, as it
 * may contain private data. However, it must be in a directory to which PHP run
 * within your web server can write.
 *
 * Contrary to wgDebugLogFile, it is not necessary to include a wiki-id in these log file names
 * if you have multiple wikis. These log entries are prefixed with sufficient information to
 * identify the relevant wiki (web server hostname and wiki-id).
 */

// Groups from MediaWiki core

$wgDBerrorLog = './logs/dberror.log';
$wgRateLimitLog = './logs/mwlogratelimit.log';
$wgDebugLogGroups = array(
	'resourceloader' => './logs/mwlogresourceloader.log',
	'exception' => './logs/mwlogexception.log',
	'error' => './logs/mwlogerror.log',
	#'exception-json' => '/var/log/mediawiki/exception.json',

	// Extra log groups from your extension
	#'myextension' => '/var/log/mediawiki/myextension.log',
	#'somegroup' => '/var/log/mediawiki/somegroup.log',
);


## To enable image uploads, make sure the 'images' directory

## is writable, then set this to true:

#############################################
# image upload settings
#############################################

$wgEnableUploads = true;
$wgDisableUploads = false;

$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'doc',
    'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx',
    'pptx', 'ps', 'odt', 'ods', 'odp', 'odg'
);

$wgStrictFileExtensions = false;
$wgFileBlacklist = [];
$wgMimeTypeBlacklist = [];

$wgGroupPermissions['autoconfirmed']['upload_by_url'] = true;
$wgGroupPermissions['user']['upload_by_url'] = true;
$wgAllowCopyUploads = true;
$wgCopyUploadsFromSpecialUpload = true;

#############################################
#############################################

#$wgUseImageMagick = true;

#$wgImageMagickConvertCommand = "/usr/bin/convert";


# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;


# Periodically send a pingback to https://www.mediawiki.org/ with basic data

# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;



## If you use ImageMagick (or any other shell command) on a

## Linux server, this will need to be set to the name of an

## available UTF-8 locale
$wgShellLocale = "C.UTF-8";


## Set $wgCacheDirectory to a writable directory on the web server

## to make your wiki go slightly faster. The directory should not

## be publically accessible from the web.


#$wgCacheDirectory = "$IP/cache";



# Site language code, should be one of the list in ./languages/data/Names.php

$wgLanguageCode = "en";


$wgSecretKey = "05229bd8baa8fec0fd9794647fbd2fa9fbc2cfdf4da5b6c25a4bdb615709cec8";



# Changing this will log out all existing sessions.

$wgAuthenticationTokenVersion = "1";



# Site upgrade key. Must be set to a string (default provided) to turn on the

# web installer while LocalSettings.php is in place

$wgUpgradeKey = "84d20a7ac7abce30";



## For attaching licensing metadata to pages, and displaying an

## appropriate copyright notice / icon. GNU Free Documentation

## License and Creative Commons licenses are supported so far.

$wgRightsPage = "";

# Set to the title of a wiki page that describes your license/copyright

$wgRightsUrl = "https://creativecommons.org/licenses/by-nc-sa/4.0/";

$wgRightsText = "Creative Commons Attribution-NonCommercial-ShareAlike";

$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by-nc-sa.png";



# Path to the GNU diff3 utility. Used for conflict resolution.

$wgDiff3 = "C:\\Program Files\\Git\\usr\\bin\\diff3.exe";



# The following permissions were set based on your choice in the installer

$wgGroupPermissions['*']['createaccount'] = false;

$wgGroupPermissions['*']['edit'] = false;



## Default skin: you can change the default skin. Use the internal symbolic

## names, ie 'vector', 'monobook':

$wgDefaultSkin = "monobook";



# Enabled skins.

# The following skins were automatically enabled:

wfLoadSkin( 'CologneBlue' );
wfLoadSkin( 'Modern' );

wfLoadSkin( 'MonoBook' );

wfLoadSkin( 'Vector' );




# Enabled extensions. Most of the extensions are enabled by adding

# wfLoadExtensions('ExtensionName');

# to LocalSettings.php. Check specific extension documentation for more details.

# The following extensions were automatically enabled:

wfLoadExtension( 'Cite' );

wfLoadExtension( 'CiteThisPage' );

wfLoadExtension( 'ConfirmEdit' );

wfLoadExtension( 'Gadgets' );

wfLoadExtension( 'ImageMap' );

wfLoadExtension( 'InputBox' );

wfLoadExtension( 'Interwiki' );

wfLoadExtension( 'LocalisationUpdate' );

wfLoadExtension( 'Nuke' );

wfLoadExtension( 'ParserFunctions' );

wfLoadExtension( 'PdfHandler' );

wfLoadExtension( 'Poem' );

wfLoadExtension( 'Renameuser' );

wfLoadExtension( 'SpamBlacklist' );

wfLoadExtension( 'SyntaxHighlight_GeSHi' );

wfLoadExtension( 'TitleBlacklist' );

wfLoadExtension( 'WikiEditor' );



# End of automatically generated settings.


### Add more configuration options below.
 $wgAllowImageTag = true; ## NAMESPACES
// Define constants for my additional namespaces.
define("NS_PROJECTS", 5000); // This MUST be even.
define("NS_PROJECTS_TALK", 5001); // This MUST be the following odd integer.
define("NS_ACADEMICS", 5002); // This MUST be even.
define("NS_ACADEMICS_TALK", 5003); // This MUST be the following odd integer.
define("NS_THOUGHTS", 5004); // This MUST be even.
define("NS_THOUGHTS_TALK", 5005); // This MUST be the following odd integer.
define("NS_SKILLS", 5006); // This MUST be even.
define("NS_SKILLS_TALK", 5007); // This MUST be the following odd integer.
define("NS_CORBIN", 5008); // This MUST be even.
define("NS_CORBIN_TALK", 5009); // This MUST be the following odd integer.
define("NS_PUZZLES", 5010); // This MUST be even.
define("NS_PUZZLES_TALK", 5011); // This MUST be the following odd integer.

// Add namespaces.
$wgExtraNamespaces[NS_PROJECTS] = "Projects";
$wgExtraNamespaces[NS_PROJECTS_TALK] = "Projects_talk";
$wgExtraNamespaces[NS_ACADEMICS] = "Academics";
$wgExtraNamespaces[NS_ACADEMICS_TALK] = "Academics_talk";
$wgExtraNamespaces[NS_THOUGHTS] = "Thoughts";
$wgExtraNamespaces[NS_THOUGHTS_TALK] = "Thoughts_talk";
$wgExtraNamespaces[NS_SKILLS] = "Skills";
$wgExtraNamespaces[NS_SKILLS_TALK] = "Skills_talk";
$wgExtraNamespaces[NS_CORBIN] = "Corbin";
$wgExtraNamespaces[NS_CORBIN_TALK] = "Corbin_talk";
$wgExtraNamespaces[NS_PUZZLES] = "Puzzles";
$wgExtraNamespaces[NS_PUZZLES_TALK] = "Puzzles_talk";


## EXTENSIONS
#CategoryTree Extension
wfLoadExtension( 'CategoryTree' );

#MobileFrontEnd Extension
wfLoadExtension( 'MobileFrontend' );
$wgMFAutodetectMobileView = true;
$wgMFDefaultSkinClass = 'SkinVector';

#MsCatSelect Extension
wfLoadExtension( 'MsCatSelect' );
$wgMSCS_WarnNoCategories = true;

#Configure Extension
require_once "$IP/extensions/Configure/Configure.php";
efConfigureSetup();

#ExternalData Extension
require_once "$IP/extensions/ExternalData/ExternalData.php";
#DATABASES
$edgDBServer['projects-db'] = "db";
$edgDBServerType['projects-db'] = "mysql"; 
$edgDBName['projects-db'] = "wiki";
$edgDBUser['projects-db'] = "wiki";
$edgDBPass['projects-db'] = "YqKOnYOXGrHaUqFU";

#SyntaxHighlighting Extension
wfLoadExtension( 'SyntaxHighlight_GeSHi' );

$wgRawHtml = true;

$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true; 

?>
